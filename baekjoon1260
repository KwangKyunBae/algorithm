package project;
import java.util.*;
public class Main {
    static int N; //정점의 개수
    static int M; // 간선의 개수
    static int V; // 정점의 시작번호
    static int[][] map;
    static boolean[] visited;
    public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         N = sc.nextInt();
         M = sc.nextInt();
         V = sc.nextInt();
         map = new int[N+1][N+1];
         visited= new boolean[N+1];
        for(int i=1; i<M+1; i++){
            int num1 = sc.nextInt();
            int num2 = sc.nextInt();
            map[num1][num2] = 1;
            map[num2][num1] = 1;
        }
        
        dfs(V);
        Arrays.fill(visited,false);
        System.out.println();
        bfs(V);
    }
    
    public static void dfs(int V){
        visited[V] = true;
        System.out.print(V + " ");
        for(int i=1; i<N+1; i++){
            if(map[V][i] == 1 && visited[i] == false){
                dfs(i);   
            }
        }
    }
    
    public static void bfs(int V){
        Queue<Integer> queue = new LinkedList<Integer>();
        visited[V] = true;
        queue.offer(V);
        
        while(!queue.isEmpty()){
            V = queue.poll();
            System.out.print(V + " ");
            for(int i=1; i<N+1; i++){
                if(map[V][i] == 1 && visited[i] == false){
                    queue.offer(i);
                    visited[i] = true;
                }
            }
        }
    }
    
    

}
